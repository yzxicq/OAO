

    gtk+ 3.0 GTK+ 是一个构建 GNOME 应用程序用户界面的主要库。它提供用来进行用户
界面控制的用户界面控件和信号回调函数。
#include <gtk/gtk.h>	//c语言头文件
让我们更加熟悉它，多个用户界面(窗口部件)需要一个应用程序，窗口部件也可以添加多个
小部件，它们(程序、窗口、各种小部件)都有各自的行为、属性，比如按钮的点击、文字、
本身大小，这些部件、行为、属性都需要事先用结构体(struct)加以实现。
程序用GtkApplication结构体，窗口部件、小部件用GtkWidget结构体

//初始化
#########################################################
GtkApplication * gtk_application_new (const gchar *application_id, GApplicationFlags flags);
g_signal_connect (app, "activate", G_CALLBACK (activate), NULL);
g_application_run (G_APPLICATION (app), argc, argv);	

########################################################
g_application_run(g_object_new, argc, argv)
g_object_new
G_DEFINE_TYPE([type], [gtk_name], G_TYPE_OBJECT)  #如下:

static void [gtk_name]_init ([type] *self);  # 每个对象创建的时候都会被调用
static void [gtk_name]_class_init ([type]Class *klass);  
static gpointer [gtk_name]_parent_class = NULL;  
static void [gtk_name]_class_intern_init (gpointer klass)  
{  
		[gtk_name]_parent_class = g_type_class_peek_parent (klass);  
		[gtk_name]_class_init (([type]Class*) klass);  
	}
	GType [gtk_name]_get_type (void)  
	{  
	static volatile gsize g_define_type_id__volatile = 0;  
	if (g_once_init_enter (&g_define_type_id__volatile))  
	{  
		GType g_define_type_id = g_type_register_static_simple (GTK_TYPE_WIDGET, g_intern_static_string ("[type]"), sizeof ([type]Class), (GClassInitFunc) [gtk_name]_class_intern_init, sizeof ([type]), (GInstanceInitFunc) [gtk_name]_init, 0);  
		{  
			const GInterfaceInfo g_implement_interface_info = {  
			(GInterfaceInitFunc) [gtk_name]_gizmo_init  
			};  
			g_type_add_interface_static (g_define_type_id, TYPE_GIZMO, &g_implement_interface_info);  
		}  
	g_once_init_leave (&g_define_type_id__volatile, g_define_type_id);  
	}  
	return g_define_type_id__volatile;  
}  
###############################################################

static void
example_app_window_init (ExampleAppWindow *win)
{
  gtk_widget_init_template (GTK_WIDGET (win));
}

static void
example_app_window_class_init (ExampleAppWindowClass *class)
{
  gtk_widget_class_set_template_from_resource (GTK_WIDGET_CLASS (class),
                                               "/org/gtk/exampleapp/window.ui");
}

######################################################

gtk_init()



gtk_main()





############################################
new,set,













